version: '3'
services:

  api-gateway:
    image: nginx
    container_name: api-gateway
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - alphanetwork
    
  book:
    build:
      context: ./book-services/
      dockerfile: ./book-services/Dockerfile
    environment:
      - APP_HOST=${APP_BOOK_HOST}
      - APP_PORT=${APP_BOOK_PORT}
    ports:
      - 3000:3000
    depends_on:
      - db-services
    networks:
      - alphanetwork
  
  order:
    build:
      context: ./order-services/
      dockerfile: ./order-services/Dockerfile
    environment:
      - APP_HOST=${APP_ORDER_HOST}
      - APP_PORT=${APP_ORDER_PORT}
    ports:
      - 8000:8000
    depends_on:
      - db-services
    networks:
      - alphanetwork
  
  user:
    build:
      context: ./user-services/
      dockerfile: ./user-services/Dockerfile
    environment:
      - APP_HOST=${APP_USER_HOST}
      - APP_PORT=${APP_USER_PORT}
    ports:
      - 5000:5000
    depends_on:
      - db-services
    networks:
      - alphanetwork
  
  db-services:
    container_name: db-book
    image: mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_BOOK_NAME}
      - MYSQL_DATABASE=${MYSQL_ORDER_NAME}
      - MYSQL_DATABASE=${MYSQL_USER_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
    ports:
      - 3306:3306
    networks:
      - alphanetwork

  msgbroker:
    container_name: msgbroker
    image: rabbitmq:3.9.11-management-alpine
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - alphanetwork

networks:
  alphanetwork: